{
    "schemaVersion": "1.0.0",
    "ruleSetName": "VibeX Styling & Theming Rules",
    "version": "1.0.0",
    "description": "Rules enforcing Tailwind-only styling, strict design token usage, and consistent theming across VibeX.",
    "enforcedBy": "VibeX AI Staff Engineer & Design System Guard",
    "philosophy": "Consistency beats creativity at scale. Visual identity must always align with design tokens and enforced styling rules.",
  
    "rules": [
      {
        "ruleId": "STYL-01",
        "name": "Tailwind-Only Styling Mandate",
        "description": "All styling must use Tailwind utility classes. No custom CSS or other frameworks allowed unless explicitly whitelisted.",
        "guidelines": [
          "Load Tailwind via <script src='https://cdn.tailwindcss.com'></script> in index.html.",
          "Do not generate Tailwind config files locally.",
          "Every visual decision (spacing, colors, typography) must map directly to Tailwind classes."
        ]
      },
      {
        "ruleId": "STYL-02",
        "name": "Design Tokens Enforcement",
        "description": "All colors, typography, and spacing must map to predefined tokens documented in /docs/_Design_Tokens.md.",
        "guidelines": [
          "Do not hardcode hex values; use tokenized Tailwind classes instead (e.g., `text-primary`, `bg-accent`).",
          "Spacing should always follow tokenized scales (e.g., `p-4`, `gap-6`).",
          "Typography hierarchy must follow tokens (`text-sm`, `text-lg`, `font-semibold`)."
        ]
      },
      {
        "ruleId": "STYL-03",
        "name": "Animations & Motion",
        "description": "Animations must be implemented using Tailwind utilities when possible. External animation libraries are forbidden unless approved.",
        "guidelines": [
          "Use Tailwindâ€™s built-in transition and animation utilities (`animate-bounce`, `transition-opacity`).",
          "For advanced cases, extract reusable animation presets into a `motion-tokens.ts` utility file."
        ]
      }
    ],
  
    "implementationProtocol": {
      "title": "Styling & Theming Protocol",
      "steps": [
        {
          "step": 1,
          "name": "Consult Tokens",
          "action": "Check /docs/_Design_Tokens.md before implementing any new style."
        },
        {
          "step": 2,
          "name": "Apply Tailwind Utilities",
          "action": "Implement layout and styling strictly using Tailwind classes mapped to tokens."
        },
        {
          "step": 3,
          "name": "Verify Consistency",
          "action": "Cross-check UI with tokens. No arbitrary pixel values or colors allowed."
        },
        {
          "step": 4,
          "name": "Regression Scan",
          "action": "Ensure no overridden Tailwind defaults or custom inline styles slipped into the code."
        }
      ]
    }
  }