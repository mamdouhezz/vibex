{
    "schemaVersion": "1.0.0",
    "ruleSetName": "VibeX UI/UX & Engineering Excellence Rules",
    "version": "1.0.0",
    "description": "A master ruleset enforcing advanced UI/UX design, responsiveness, performance, memory safety, internationalization, modernization, and code documentation standards for VibeX.",
    "enforcedBy": "VibeX AI UX Engineer & Staff Engineer",
    "philosophy": "The application must feel modern, lightweight, accessible, and trustworthy by default. Every UI decision impacts user trust and adoption.",
  
    "rules": [
      {
        "ruleId": "UI-01",
        "name": "React Icons Mandate",
        "description": "All icons in the application must use react-icons exclusively.",
        "guidelines": [
          "Allowed sets: Font Awesome, Lucide, Heroicons, Tabler, Material, Phosphor, etc.",
          "Import icons individually to keep bundle size minimal.",
          "Example: `import { FaBeer } from 'react-icons/fa'`."
        ]
      },
      {
        "ruleId": "UI-02",
        "name": "Responsiveness by Default",
        "description": "All components must be engineered to be fully responsive using modern techniques (2025 standards).",
        "guidelines": [
          "Mobile-first design with Tailwind responsive utilities (sm:, md:, lg:, xl:).",
          "Use CSS Grid and Flexbox properly for adaptive layouts.",
          "Charts and tables must be responsive containers (overflow handling).",
          "All breakpoints tested across mobile, tablet, desktop, ultra-wide."
        ]
      },
      {
        "ruleId": "PERF-03",
        "name": "Performance & Smoothness Mandate",
        "description": "The application must always remain lightweight and smooth.",
        "guidelines": [
          "Lazy-load components when possible.",
          "Use dynamic imports for large libraries (d3, recharts).",
          "No unnecessary re-renders (use React.memo, useCallback, useMemo).",
          "Animations should be GPU-accelerated (Tailwind + Framer Motion)."
        ]
      },
      {
        "ruleId": "MEM-04",
        "name": "Memory Safety Rules",
        "description": "The app must never leak memory due to improper cleanup.",
        "guidelines": [
          "All `useEffect` hooks must return cleanup functions where needed.",
          "Event listeners must always be removed on unmount.",
          "Workers and intervals must be terminated/cleared explicitly.",
          "Avoid unbounded data structures (use pagination, chunking)."
        ]
      },
      {
        "ruleId": "INTL-05",
        "name": "Bilingual by Default",
        "description": "The app must support at least two languages (English + Arabic) from the start.",
        "guidelines": [
          "Use i18n library (e.g., react-i18next).",
          "All UI strings must be externalized into JSON resource files.",
          "RTL support (Right-to-Left) must be fully functional.",
          "Language toggle must be accessible in settings menu."
        ]
      },
      {
        "ruleId": "DEP-06",
        "name": "Always Up-to-Date Dependencies",
        "description": "The app must always run on the latest stable versions of dependencies.",
        "guidelines": [
          "Run `npm outdated` weekly.",
          "CI/CD must fail if critical dependencies are behind by >1 major version.",
          "Security patches must be applied immediately.",
          "Lockfile must be consistent (`package-lock.json` always committed)."
        ]
      },
      {
        "ruleId": "DOC-07",
        "name": "Commenting & Documentation Standards",
        "description": "All code must be thoroughly documented and commented.",
        "guidelines": [
          "Every function/component must have a docstring describing purpose, params, and return value.",
          "Complex logic must include inline comments explaining reasoning.",
          "Public APIs must include usage examples in JSDoc/TSDoc format.",
          "Non-obvious Tailwind class usage must include a comment for readability."
        ]
      }
    ],
  
    "implementationProtocol": {
      "title": "UI/UX & Engineering Protocol",
      "steps": [
        {
          "step": 1,
          "name": "Apply Icon Standards",
          "action": "Ensure all icons come from react-icons and are imported individually."
        },
        {
          "step": 2,
          "name": "Check Responsiveness",
          "action": "Test component on multiple breakpoints and devices before merge."
        },
        {
          "step": 3,
          "name": "Verify Performance",
          "action": "Run Lighthouse audit and React Profiler to ensure smoothness."
        },
        {
          "step": 4,
          "name": "Enforce Memory Safety",
          "action": "Verify all effects, listeners, and workers clean up correctly."
        },
        {
          "step": 5,
          "name": "Validate Bilingual Setup",
          "action": "Ensure i18n works with English/Arabic and supports RTL."
        },
        {
          "step": 6,
          "name": "Update Dependencies",
          "action": "Run CI dependency check before every release."
        },
        {
          "step": 7,
          "name": "Review Comments",
          "action": "Reject any PR missing required comments/docstrings."
        }
      ]
    },
  
    "verification": {
      "responsiveness_check": "Manual + automated tests across breakpoints.",
      "performance_check": "Lighthouse score >90 for performance and best practices.",
      "memory_check": "React Profiler and DevTools must show no leaks after stress testing.",
      "bilingual_check": "App fully functional in English and Arabic, including RTL layout.",
      "dependency_check": "CI/CD must pass npm outdated and audit checks.",
      "doc_check": "Random PR audits must confirm proper commenting/documentation."
    }
  }