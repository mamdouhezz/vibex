{
    "schemaVersion": "1.0.0",
    "ruleSetName": "VibeX Unified Type System Rules",
    "version": "1.0.0",
    "description": "Rules enforcing a Single Source of Truth (SSOT) for TypeScript types across the VibeX codebase to eliminate duplication and circular dependencies.",
    "enforcedBy": "VibeX AI Type Architect",
    "philosophy": "Types must be centralized, non-duplicated, and imported consistently across the entire system.",
  
    "rules": [
      {
        "ruleId": "TYP-01",
        "name": "Single Barrel File Principle",
        "description": "All shared TypeScript types must be defined and exported from a single file: src/types/index.ts.",
        "consequence": "Any duplicate or fragmented type definitions are illegal and must be refactored into the SSOT."
      },
      {
        "ruleId": "TYP-02",
        "name": "Unidirectional Type Dependency",
        "description": "The src/types/index.ts file must not import from any other part of the application.",
        "rationale": "Types form the foundation of the system and cannot create circular dependencies."
      },
      {
        "ruleId": "TYP-03",
        "name": "No-Duplicate Declarations",
        "description": "Each type/interface must be declared only once in src/types/index.ts.",
        "consequence": "Re-declaring an existing type in another file is a critical error and must be refactored."
      }
    ],
  
    "implementationProtocol": {
      "title": "Type System Unification Protocol",
      "steps": [
        {
          "step": 1,
          "name": "Consolidate Types",
          "action": "Move all type/interface definitions from other files into src/types/index.ts. Remove duplicates."
        },
        {
          "step": 2,
          "name": "Delete Redundant Type Files",
          "action": "After consolidation, delete other type files under src/types/. Only index.ts remains."
        },
        {
          "step": 3,
          "name": "Update Imports",
          "action": "Search and replace all imports pointing to deleted files. Correct usage: import { MyType } from '@/types'."
        },
        {
          "step": 4,
          "name": "Verify",
          "action": "Run tsc --noEmit to ensure no type errors. Run npm run dev to confirm no runtime errors."
        }
      ]
    },
  
    "verification": {
      "tsc_check": "Must pass with zero errors.",
      "runtime_check": "npm run dev must run without 'Missing initializer in const declaration' or circular dependency errors.",
      "import_check": "All modules must import from '@/types', not sub-files."
    }
  }